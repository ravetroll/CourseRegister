@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using CourseRegisterApp.Data
@using MudBlazor

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="my-4">
    <MudText Typo="Typo.h3" GutterBottom="true">Profile</MudText>
    <StatusMessage />

    <MudCard>
        <MudCardContent>
            <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                <MudTextField T="string"
                              Label="Username"
                              Variant="Variant.Filled"
                              Value="@username"
                              Disabled="true"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Person"
                              AdornmentColor="Color.Info"
                              Margin="Margin.Normal" />
                <MudTextField T="string"
                              @bind-Value="Input.PhoneNumber"
                              Label="Phone number"
                              For="@(() => Input.PhoneNumber)"
                              Name="Input.PhoneNumber"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Phone"
                              AdornmentColor="Color.Success"
                              Variant="Variant.Filled"
                              Margin="Margin.Normal" />
                <div class="mt-4">
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               FullWidth="true"
                               Size="Size.Large">
                        Save
                    </MudButton>
                </div>
            </EditForm>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}
