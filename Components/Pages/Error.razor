@page "/Error"
@using System.Diagnostics
@rendermode InteractiveServer

<PageTitle>Error</PageTitle>

<MudContainer>
    <MudText Typo="Typo.h3" Color="Color.Error" Align="Align.Center">Error.</MudText>
    <MudText Typo="Typo.h5" Color="Color.Error" Align="Align.Center">An error occurred while processing your request.</MudText>

    @if (ShowRequestId)
    {
        <MudText Class="mt-4">
            <MudText Typo="Typo.subtitle1" Inline="true">
                <strong>Request ID:</strong>
            </MudText>
            <MudText Typo="Typo.subtitle1" Inline="true">
                <code>@RequestId</code>
            </MudText>
        </MudText>
    }

    <MudPaper Class="pa-4 mt-6">
        <MudText Typo="Typo.h6">Development Mode</MudText>
        <MudText Class="mt-2">
            Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
        </MudText>
        <MudText Class="mt-2">
            <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
            It can result in displaying sensitive information from exceptions to end users.
            For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
            and restarting the app.
        </MudText>
    </MudPaper>
</MudContainer>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}