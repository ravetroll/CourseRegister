@page "/courses/{id:int}"
@attribute [Authorize(Roles = "Admin,Lecturer,Student")]
@using CourseRegisterApp.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using CourseRegisterApp.CourseData
@using MudBlazor
@using System.Security.Claims


@inject CourseRegisterContext DbContext
@inject ISnackbar Snackbar
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Course Details</PageTitle>

@if (CourseDetails == null)
{
    <MudContainer MaxWidth="MaxWidth.Large" Class="my-4">
        <MudText Typo="Typo.h5">Course not found.</MudText>
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
    </MudContainer>
}
else
{
    <MudContainer MaxWidth="MaxWidth.Large" Class="my-4">
        <MudText Typo="Typo.h4" GutterBottom="true">@CourseDetails.CourseName</MudText>
       

        @if (_isStudent && _isEnrolled)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Error" Class="mb-4" OnClick="OpenLeaveCourseDialog">
                Leave Course
            </MudButton>
        }

        <MudGrid Class="my-4" AlignItems="AlignItems.Stretch">
            <MudItem xs="12" md="6" Class="d-flex align-stretch">
                <MudCard Elevation="2" Style="flex-grow: 1;">
                    <MudCardHeader>
                        <MudText Typo="Typo.h6">Course Information</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>
                            <strong>Lecturer:</strong> @CourseDetails.LecturerNavigation?.Email @CourseDetails.LecturerNavigation?.FirstName @CourseDetails.LecturerNavigation?.LastName
                        </MudText>
                        <MudText>
                            <strong>Start Date:</strong> @CourseDetails.CourseStart.ToShortDateString()
                        </MudText>
                        <MudText>
                            <strong>End Date:</strong> @CourseDetails.CourseEnd.ToShortDateString()
                        </MudText>
                        
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <MudItem xs="12" md="6" Class="d-flex align-stretch">
                <MudCard Elevation="2" Style="flex-grow: 1;">
                    <MudCardHeader>
                        <MudText Typo="Typo.h6">Enrollment Status</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>
                            <strong>Max Students:</strong> @CourseDetails.MaxStudents
                        </MudText>
                        <MudText>
                            <strong>Enrolled Students:</strong> @_enrolledStudentsCount
                        </MudText>
                        <MudText>
                            <strong>Available Places:</strong> @_freePlaces
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        <MudDivider Class="my-4" />

        <MudText Typo="Typo.h5" GutterBottom="true">Enrolled Students</MudText>

        @if (Students.Any())
        {
            <MudTable T="CourseUser" Items="Students" Dense="true" Hover="true" Bordered="true" Striped="true">
                <HeaderContent>
                    <MudTh>Student Email</MudTh>
                    
                        <MudTh>Actions</MudTh>
                   
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Student Email">@context.User?.Email</MudTd>
                    @if (_isAdmin || _isLecturer & context.Course.Lecturer == _currentUserId || _isStudent & context.UserId == _currentUserId)
                    {
                        <MudTd DataLabel="Actions">
                            <MudTooltip Text="Remove Enrolled Student">
                            <MudIconButton Icon="@Icons.Material.Filled.RemoveCircle"
                                           Color="Color.Error"
                                               OnClick="@(() => OpenRemoveDialog(context))" />
                            </MudTooltip>
                        </MudTd>
                    }
                    else
                    {
                        <MudTd DataLabel="Actions">
                            <MudIconButton Icon="@Icons.Material.Filled.Circle"
                                           Color="Color.Dark"
                                           />
                        </MudTd>
                    }
                </RowTemplate>
            </MudTable>
        }
        else
        {
            <MudText Typo="Typo.body1" Color="Color.Secondary">No students are currently enrolled in this course.</MudText>
        }
    </MudContainer>

    <!-- Confirmation Dialog -->
    <MudDialog @bind-Visible="isRemoveDialogOpen">
        <TitleContent>
            <MudText Typo="Typo.h6">Confirm Removal</MudText>
        </TitleContent>
        <DialogContent>
            <MudText>
                Are you sure you want to remove <strong class="font-weight-bold">@_userToRemove?.User?.Email</strong> from this course?
            </MudText>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="CloseDialog">Cancel</MudButton>
            <MudButton OnClick="ConfirmRemovalAsync" Color="Color.Error" Variant="Variant.Filled">Remove</MudButton>
        </DialogActions>
    </MudDialog>
}


