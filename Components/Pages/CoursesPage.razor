@page "/courses"
@attribute [Authorize(Roles = "Admin,Lecturer,Student")]
@using CourseRegisterApp.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using CourseRegisterApp.CourseData
@using System.Security.Claims
@using MudBlazor
@using System.ComponentModel.DataAnnotations

@inject CourseRegisterContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject ISnackbar Snackbar

<PageTitle>Course List</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="my-4">
    <MudText Typo="Typo.h5" GutterBottom="true">Available Courses</MudText>

    <MudTable T="Course" Items="Courses" Dense="true" Hover="true" Bordered="true" Striped="true" Filter="new Func<Course,bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">All Courses</MudText>
            <MudSpacer />
            <AuthorizeView Roles="Lecturer">
                <Authorized>
                    <MudButton OnClick="AddCourse" Color="Color.Primary" Variant="Variant.Filled" Class="mr-2">Add New Course</MudButton>
                </Authorized>
            </AuthorizeView>
            <MudTextField T="string" @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Course Name</MudTh>
            <MudTh>Lecturer</MudTh>
            <MudTh>Start</MudTh>
            <MudTh>End</MudTh>
            <MudTh>Subscribed</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Course Name">@context.CourseName</MudTd>
            <MudTd DataLabel="Lecturer">@context.LecturerNavigation?.Email</MudTd>
            <MudTd DataLabel="Start">@context.CourseStart</MudTd>
            <MudTd DataLabel="End">@context.CourseEnd</MudTd>
            <MudTd DataLabel="Subscribed">@($"{context.CourseUsers.Count}/{context.MaxStudents}")</MudTd>
            <MudTd DataLabel="Actions">
                <AuthorizeView Roles="Admin,Lecturer" Context="ctx">
                    <Authorized>
                        <MudButton Color="Color.Info" OnClick="@(() => OpenEditCourseDialog(context.CourseId))" Class="mr-2">Edit</MudButton>
                        
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Student" Context="ctx">
                    <Authorized>
                        @* Students can only register if they are not already enrolled *@
                        @if (!IsStudentRegisteredForCourse(context.CourseId))
                        {
                            <MudButton Color="Color.Primary" OnClick="@(() => OpenRegisterCourseDialog(context.CourseId))">Register</MudButton>
                        }
                        else
                        {
                            <MudButton Color="Color.Success" Disabled="true">Registered</MudButton>
                        }
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Admin,Lecturer,Student" Context="ctx">
                    <Authorized>

                        <MudButton Color="Color.Info" Href="@($"/courses/{context.CourseId}")" Class="mr-2">View</MudButton>
                        
                    </Authorized>
                </AuthorizeView>
                
              

            </MudTd>
        </RowTemplate>
    </MudTable>

    @* The following dialogs would be used for the edit and registration processes *@
    <MudDialog @bind-Visible="isEditDialogVisible" Style="min-width: 400px;">
        <TitleContent>
            <MudText Typo="Typo.h6">Edit Course</MudText>
        </TitleContent>
        <DialogContent>
            <MudForm @ref="editCourseForm" Model="editedCourse"  Class="d-flex flex-column gap-4">
                <MudTextField @bind-Value="editedCourse.CourseName"
                              Label="Course Name"
                              Required="true"
                              RequiredError="Course Name is required!" />

                <MudDatePicker @bind-Date="editedCourse.StartDate"
                               Label="Start Date"
                               Required="true"
                               RequiredError="Start Date is required!" />

                <MudDatePicker @bind-Date="editedCourse.EndDate"
                               Label="End Date"
                               Required="true"
                               RequiredError="End Date is required!" />
                <MudNumericField @bind-Value="editedCourse.MaxStudents" Label="Max Students" Variant="Variant.Text" Min="1" Max="30" />
                <div class="d-flex justify-content-end">
                    <MudButton OnClick="@(() => isEditDialogVisible = false)" Color="Color.Default" Class="mr-2">Cancel</MudButton>
                    <MudButton OnClick="@(() => SaveEditedCourse())" Color="Color.Primary" Variant="Variant.Filled">Save</MudButton>
                </div>
            </MudForm>
        </DialogContent>
    </MudDialog>

    @* Dialog for registering for a course *@
    <MudDialog @bind-Visible="isRegisterDialogVisible" Style="min-width: 400px;">
        <TitleContent>
            <MudText Typo="Typo.h6">Register for Course</MudText>
        </TitleContent>
        <DialogContent>
            <MudText>Are you sure you want to register for <MudChip T="string" Label="true">@registeredCourseName</MudChip></MudText>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(() => isRegisterDialogVisible = false)" Color="Color.Default">Cancel</MudButton>
            <MudButton OnClick="ConfirmRegistration" Color="Color.Primary" Variant="Variant.Filled">Confirm</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog @bind-Visible="isAddCourseDialogVisible" Style="min-width: 400px;">
        <TitleContent>
            <MudText Typo="Typo.h6">Add New Course</MudText>
        </TitleContent>
        <DialogContent>
            <MudForm @ref="addCourseForm" Model="newCourse" OnValidSubmit="SaveNewCourse" Class="d-flex flex-column gap-4">
                <MudTextField @bind-Value="newCourse.CourseName"
                              Label="Course Name"
                              Required="true"
                              RequiredError="Course Name is required!" />

                <MudDatePicker @bind-Date="newCourse.StartDate"
                               Label="Start Date"
                               Required="true"
                               RequiredError="Start Date is required!" />

                <MudDatePicker @bind-Date="newCourse.EndDate"
                               Label="End Date"
                               Required="true"
                               RequiredError="End Date is required!" />
                <MudNumericField @bind-Value="newCourse.MaxStudents" Label="Max Students" Variant="Variant.Text" Min="1" Max="30" />
            </MudForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(() => isAddCourseDialogVisible = false)" Color="Color.Default">Cancel</MudButton>
            <MudButton OnClick="@(() => SaveNewCourse())" Color="Color.Primary" Variant="Variant.Filled">Save</MudButton>
        </DialogActions>
    </MudDialog>

</MudContainer>

