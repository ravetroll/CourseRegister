// <auto-generated />
using System;
using CourseRegisterApp.CourseData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseRegisterApp.CourseData.Migrations
{
    [DbContext(typeof(CourseRegisterContext))]
    [Migration("20250824054726_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseRegisterApp.CourseData.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<DateOnly>("CourseEnd")
                        .HasColumnType("date");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateOnly>("CourseStart")
                        .HasColumnType("date");

                    b.Property<int>("Lecturer")
                        .HasColumnType("int");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("Lecturer");

                    b.HasIndex(new[] { "CourseName" }, "NonClusteredIndex-20250823-215620")
                        .IsUnique();

                    b.ToTable("Course");
                });

            modelBuilder.Entity("CourseRegisterApp.CourseData.CourseUser", b =>
                {
                    b.Property<int>("CourseUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseUserId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CourseUserId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "CourseId", "UserId" }, "IX_CourseUser")
                        .IsUnique();

                    b.ToTable("CourseUser");
                });

            modelBuilder.Entity("CourseRegisterApp.CourseData.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LastName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "IX_User")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("CourseRegisterApp.CourseData.Course", b =>
                {
                    b.HasOne("CourseRegisterApp.CourseData.User", "LecturerNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("Lecturer")
                        .IsRequired()
                        .HasConstraintName("FK_Course_User");

                    b.Navigation("LecturerNavigation");
                });

            modelBuilder.Entity("CourseRegisterApp.CourseData.CourseUser", b =>
                {
                    b.HasOne("CourseRegisterApp.CourseData.Course", "Course")
                        .WithMany("CourseUsers")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_CourseUser_Course");

                    b.HasOne("CourseRegisterApp.CourseData.User", "User")
                        .WithMany("CourseUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_CourseUser_User");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseRegisterApp.CourseData.Course", b =>
                {
                    b.Navigation("CourseUsers");
                });

            modelBuilder.Entity("CourseRegisterApp.CourseData.User", b =>
                {
                    b.Navigation("CourseUsers");

                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
